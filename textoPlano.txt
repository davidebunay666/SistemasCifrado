Antes de empezar a explicar los detalles sobre la capa de red vale la pena volver a exponer el contexto en el que operan los protocolos de esta capa. En la figura 5-1 podemos ver este con texto. Los componentes principales de la red son el equipo del Provedor del Servicio de Internet ISP enrutadores conectados mediante lineas de transmision que se muestra dentro del ovalo sombreado y el equipo de los clientes que se muestra fuera del ovalo. El host H1 esta conectado de manera directa a un enrutador del ISP A tal vez en forma de una computadora en el hogar conectada a un modem DSL. En contraste H2 se encuentra en una LAN que podria ser una Ethernet de oficina con un enrutador F el cual es propiedad del cliente quien lo maneja. Este enrutador tiene una linea alquilada que va al equipo del ISP. Mostramos a F fuera del ovalo porque no pertenece al ISP. Sin embargo y para los fines de este capitulo los enrutadores locales de los clientes se consideran parte de la red del ISP debido a que ejecutan los mismos algoritmos que los enrutadores del ISP y nuestro principal interes aqui son los algoritmos. Este equipo se utiliza de la siguiente manera. Un host que desea enviar un paquete lo transmite al enrutador mas cercano ya sea en su propia LAN o a traves de un enlace punto a punto que va al ISP El paquete se almacena ahi hasta que haya llegado por completo y el enlace haya terminado su procesa- miento mediante la comprobacion de la suma de verificacion. Despues se reenvia al siguiente enrutador de la ruta hasta que llega al host de destino en donde se entrega. Este mecanismo se denomina conmutacion de almacenamiento y envio como hemos visto en capitulos anteriores.
512 Servicios proporcionados a la capa de transporte
La capa de red proporciona servicios a la capa de transporte en la interfaz entre la capa de red y de transporte. Una pregunta importante es que tipo de servicios proporciona precisamente la capa de red a la capa de transporte. Hay que diseñar los servicios de manera cuidadosa con los siguientes objetivos en mente:
Los servicios deben ser independientes de la tecnologia del enrutador. 2. La capa de transporte debe estar aislada de la cantidad tipo y topologia de los enrutadores presentes3 Las direcciones de red disponibles para la capa de transporte deben usar un plan de numeracion uniforme incluso a traves de redes LAN y WAN.
Dadas estas metas los diseñadores de la capa de red tienen mucha libertad para escribir especificaciones detalladas de los servicios que se ofreceran a la capa de transporte. Con frecuencia esta libertad degenera en una batalla campal entre dos bandos en conflicto. La discusion se centra en determinar si la capa de red debe proporcionar un servicio orientado a conexion o un servicio sin conexion. 
Un bando representado por la comunidad de Internet declara que la tarea de los enrutadores es mover paquetes de un lado a otro y nada mas. Desde su punto de vista basado en casi 40 años de experiencia con una red de computadoras real la red es de naturaleza no confiable sin importar su diseño. Por lo tanto los hosts deben aceptar este hecho y efectuar ellos mismos el control de errores es decir deteccion y correccion de errores y el control de flujo. Este punto de vista conduce a la conclusion de que el servicio de red debe ser sin conexion y debe contar tan solo con las primitivas SEND PACKET y RECEIVE PACKET. En particular no debe efectuarse ningun ordenamiento de paquetes ni control de flujo pues de todos modos los hosts lo van a efectuar y por lo general se obtiene poca ganancia al hacerlo dos veces. Este razonamiento es un ejemplo del argumento extremo a extremo end-to-end argument un principio de diseño que ha sido muy influyente para dar forma a Internet. Saltzer y colaboradores 1984. Ademas cada paquete debe llevar la direccion de destino completa porque cada paquete enviado se transporta de manera independiente a sus antecesores si los hay. El otro bando representado por las compañias telefonicas argumenta que la red debe proporcionar un servicio confiable orientado a conexion. Afirman que los 100 años de experiencia exitosa con el sistema telefonico mundial son una excelente guia. Desde este punto de vista la calidad del servicio es el factor dominante y sin conexiones en la red tal calidad es muy dificil de alcanzar en especial para el trafico de tiempo real como la voz y el video. Incluso despues de varias decadas esta controversia aun sigue muy vigente. Las primeras redes de datos que se utilizaron ampliamente como X.25 en la decada de 1970 y su sucesora Frame Relay en la decada de 1980 eran orientadas a conexion. Sin embargo desde los dias de la ARPANET y la Internet en sus inicios la popularidad de las capas de red sin conexion ha aumentado en forma considerable. Ahora el protocolo IP es un simbolo constante de exitoNo se vio afectado por una tecnologia orientada a conexion llamada ATM que se desarrollo para desbancarlo en la decada de 1980 en cambio ahora ATM se usa en nichos y es IP quien domina las redes telefonicas. Sin embargo tras bambalinas Internet desarrolla caracteristicas orientadas a conexion a medida que la calidad del servicio adquiere mas importancia. Dos ejemplos de tecnologias orientadas a conexion son MPLS Conmutacion Multiprotocolo Mediante Etiquetas que describiremos en este capitulo y las redes VLAN que vimos en el capitulo 4. Ambas tecnologias se utilizan ampliamente.
Implementacion del servicio sin conexion
Puesto que ya vimos las dos clases de servicios que la capa de red puede proporcionar a sus usuarios es tiempo de analizar el funcionamiento interno de esta capa. Se pueden realizar dos formas de organizacion distintas dependiendo del tipo de servicio ofrecido. Si se ofrece el servicio sin conexion los paquetes se transmiten por separado en la red y se enrutan de manera independiente. No se necesita una configuracion por adelantado. En este contexto por lo general los paquetes se conocen como datagramas en analogia con los telegramas y la red se conoce como red de datagramas. Si se utiliza el servicio orientado a conexion hay que establecer una ruta del enrutador de origen al enrutador de destino antes de poder enviar cualquier paquete de datos. Esta conexion se conoce como VC circuito virtual en analogia con los circuitos fisicos establecidos por el sistema telefonico y la red se denomina red de circuitos virtuales. En esta seccion examinaremos las redes de datagramas en la siguiente analizaremos las redes de circuitos virtuales. Ahora veamos como funciona una red de datagramas. Suponga que el proceso P1 de la figura 5-2 tiene un mensaje largo para P2Dicho proceso entrega el mensaje a la capa de transporte y le indica a esta que lo envie al proceso P2 en el host H2. El codigo de la capa de transporte se ejecuta en H1 por lo general dentro del sistema operativo. Dicho codigo agrega un encabezado de transporte al frente del mensaje y entrega el resultado a la capa de red que quiza solo sea otro procedimiento dentro del sistema operativo.
Supongamos para este ejemplo que el mensaje es cuatro veces mas largo que el tamaño maximo de paquete por lo que la capa de red tiene que dividirlo en cuatro paquetes: 1 2 3 y 4 y enviar cada uno por turnos al enrutador A mediante algun protocolo punto a punto por ejemplo PPP. En este momento entra en accion el ISP. Cada enrutador tiene una tabla interna que le indica a donde enviar paquetes para cada uno de los posibles destinos. Cada entrada en la tabla es un par que consiste en un destino y la linea de salida que se utilizara para ese destino. Solo se pueden utilizar lineas conectadas en forma directa. Por ejemplo en la figura 5-2 A solo tiene dos lineas de salida a B y a C por lo que cada paquete entrante se debe enviar a uno de estos enrutadores incluso si el destino final es algun otro enrutador. En la figura 5-2 la tabla de enrutamiento inicial de A se muestra bajo la leyenda “al principio”. En A los paquetes 1 2 y 3 se almacenan unos momentos despues de haber llegado por el enlace entrante y de haber comprobado sus sumas de verificacion. Despues cada paquete se reenvia de acuerdo con la tabla de A por el enlace de salida a C dentro de una nueva trama. Despues el paquete 1 se reenvia a E y despues a F. Cuando llega a F se envia dentro de una trama a H2 a traves de la LAN.  Los paquetes 2 y 3 siguen la misma ruta. Sin embargo ocurre algo diferente con el paquete 4. Cuando llega a A se envia al enrutador B aun cuando tambien esta destinado a F. Por alguna razon A decidio enviar el paquete 4 por una ruta diferente a la de los primeros tres paquetes. Tal vez se entero de que habia alguna congestion de trafico en alguna parte de la ruta ACE y actualizo su tabla de enrutamiento como se muestra bajo la leyenda “mas tarde”. El algoritmo que maneja las tablas y realiza las decisiones de enrutamiento se conoce como algoritmo de enrutamiento. Los algoritmos de enrutamiento son uno de los principales temas que estudiaremos en este capitulo. Hay distintos tipos de ellos como veremos mas adelante. IP Protocolo Internet que constituye la base de Internet es el ejemplo dominante de un servicio de red sin conexion. Cada paquete transporta una direccion IP de destino que los enrutadores usan para reenviar cada paquete por separado. Las direcciones son de 32 bits en los paquetes IPv4 y de 128 bits en los paquetes IPv6. Mas adelante en este capitulo describiremos IP con mucho mas detalle. 
Implementacion del servicio orientado a conexion
Para el servicio orientado a conexion necesitamos una red de circuitos virtuales. Veamos ahora como funciona. La idea detras de los circuitos virtuales es evitar la necesidad de elegir una nueva ruta para cada paquete enviado como en la figura 5-2. En cambio cuando se establece una conexion se elige una ruta de la maquina de origen a la maquina de destino como parte de la configuracion de conexion y se almacena en tablas dentro de los enrutadores. Esa ruta se utiliza para todo el trafico que fluye a traves de la conexion de la misma forma en que funciona el sistema telefonico. Cuando se libera la conexion tambien se termina el circuito virtual. Con el servicio orientado a conexion cada paquete lleva un identificador que indica a cual circuito virtual pertenece. Como ejemplo considere la situacion que se muestra en la figura 5-3. En esta el host H1 ha establecido una conexion 1 con el host H2. Esta conexion se recuerda como la primera entrada en cada una de las tablas de enrutamiento. La primera linea de la tabla A indica que si un paquete con el identificador 
 de conexion 1 viene de H1 se enviara al enrutador C y se le dara el identificador de conexion 1. De manera similar la primera entrada en C enruta el paquete a E tambien con el identificador de conexion 1. 
Ahora consideremos lo que sucede si H3 tambien desea establecer una conexion con H2. Elige el identificador de conexion 1 debido a que esta iniciando la conexion y a que esta es su unica conexion y le indica a la red que establezca el circuito virtual. Esto nos lleva a la segunda fila de las tablas. Observe que aqui surge un problema pues aunque A si puede saber con facilidad cuales paquetes de conexion 1 provienen de H1 y cuales provienen de H3 C no puede hacerlo. Por esta razon A asigna un identificador de conexion diferente al trafico de salida para la segunda conexion. Evitar conflictos de este tipo es la razon por la cual los enrutadores necesitan la habilidad de reemplazar identificadores de conexion en los paquetes de salida. En algunos contextos a este proceso se le conoce como conmutacion mediante etiquetas. MPLS Conmutacion Multiprotocolo Mediante Etiquetas del ingles MultiProtocol Label Swithching es un ejemplo de servicio de red orientado a conexion. Se utiliza dentro de las redes de ISP en Internet en donde los paquetes IP se envuelven en un encabezado MPLS que tiene un identificador de conexion o etiqueta de 20 bits. A menudo el servicio MPLS se oculta de los clientes y el ISP establece conexiones de largo plazo para grandes cantidades de trafico pero cada vez se utiliza mas para ayudar cuando la calidad del servicio es importante al igual que para otras tareas de administracion de trafico de ISP. Mas adelante en este capitulo veremos mas detalles sobre MPLS.